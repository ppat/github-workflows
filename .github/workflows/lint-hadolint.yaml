---
# yamllint disable rule:line-length
name: hadolint

on:
  workflow_call:
    inputs:
      git_ref:
        required: true
        type: string
      files:
        required: false
        type: string
        default: 'ALL'
      failure_threshold:
        required: false
        type: string
        default: 'warning'
      hadolint_config:
        required: false
        type: string
        default: ''
      mise_ignore_cfg:
        required: false
        type: string
        default: ""
      mise_log_level:
        required: false
        type: string
        default: "warn"
      verbose:
        required: false
        type: boolean

env:
  # renovate: datasource=github-releases depName=hadolint/hadolint
  HADOLINT_VERSION: "v2.14.0"

jobs:
  hadolint:
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
    - name: Setup repository and tools
      uses: ppat/homelab-ops-actions/actions/setup-repository-tools@35903fc15a8d39b5c6d5eb51350324a227a5a814 # v1.0.1
      with:
        current_git_ref: ${{ inputs.git_ref }}
        current_repository: ${{ github.repository }}
        mise_ignore_cfg: ${{ inputs.mise_ignore_cfg }}
        mise_log_level: ${{ inputs.mise_log_level }}
        # renovate: datasource=github-releases depName=jdx/mise
        mise_version: "v2025.10.10"
        token: ${{ secrets.GITHUB_TOKEN }}
        mise_toml: |
          [tools]
          hadolint = "${{ env.HADOLINT_VERSION }}"

    - name: Lint docker files
      env:
        DOCKER_FILES: ${{ inputs.files }}
        CONFIG: "${{ inputs.hadolint_config != '' && format('--config={0}', inputs.hadolint_config) || '' }}"
        FAILURE_THRESHOLD: "--failure-threshold ${{ inputs.failure_threshold }}"
        VERBOSITY: "${{ inputs.verbose && '--verbose' || '' }}"
      shell: bash
      working-directory: ./current
      # yamllint disable-line rule:indentation
      run: |
        HADOLINT_ARGS=( "${CONFIG}" "${FAILURE_THRESHOLD}" "${VERBOSITY}" )
        FILE_LIST=$(mktemp)
        if [[ "${DOCKER_FILES}" == "ALL" ]]; then
          find . -type f -name Dockerfile > ${FILE_LIST}
        else
          echo ${DOCKER_FILES} | tr ' ' '\n' > ${FILE_LIST}
        fi

        lint_dockerfile() {
          local file="$1"
          if hadolint ${HADOLINT_ARGS[*]} ${file}; then
            return 0
          else
            return 1
          fi
        }

        error_count=0
        while IFS= read -r file; do
          if lint_dockerfile ${file}; then
            echo "✅ ${file}"
          else
            echo "❌ ${file}"
            error_count=$((error_count + 1))
          fi
          echo
        done < ${FILE_LIST}

        if (( ${error_count} > 0 )); then
          exit 1
        fi
