---
# yamllint disable rule:line-length
name: terraform

on:
  workflow_call:
    inputs:
      git_ref:
        required: true
        type: string
      mise_ignore_cfg:
        required: false
        type: string
        default: ""
      mise_log_level:
        required: false
        type: string
        default: "warn"
      tf_dirs:
        description: 'JSON array of Terraform directories to validate'
        required: true
        type: string

env:
  CHECKPOINT_DISABLE: "true"
  # renovate: datasource=github-releases depName=hashicorp/terraform
  TERRAFORM_VERSION: "v1.6.6"
  # renovate: datasource=github-releases depName=terraform-linters/tflint
  TFLINT_VERSION: "v0.59.1"

jobs:
  terraform-fmt:
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
    - name: Setup repository and tools
      uses: ppat/homelab-ops-actions/actions/setup-repository-tools@35903fc15a8d39b5c6d5eb51350324a227a5a814 # v1.0.1
      with:
        current_git_ref: ${{ inputs.git_ref }}
        current_repository: ${{ github.repository }}
        mise_ignore_cfg: ${{ inputs.mise_ignore_cfg }}
        mise_log_level: ${{ inputs.mise_log_level }}
        # renovate: datasource=github-releases depName=jdx/mise
        mise_version: "v2025.10.19"
        token: ${{ secrets.GITHUB_TOKEN }}
        mise_toml: |
          [tools]
          terraform = "${{ env.TERRAFORM_VERSION }}"
          tflint    = "${{ env.TFLINT_VERSION }}"

    - name: terraform-fmt
      working-directory: ./current
      run: terraform fmt -check -recursive

  terraform-validate:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        dir: ${{ fromJSON(inputs.tf_dirs) }}
      fail-fast: false
    timeout-minutes: 5
    steps:
    - name: Setup repository and tools
      uses: ppat/homelab-ops-actions/actions/setup-repository-tools@35903fc15a8d39b5c6d5eb51350324a227a5a814 # v1.0.1
      with:
        current_git_ref: ${{ inputs.git_ref }}
        current_repository: ${{ github.repository }}
        mise_ignore_cfg: ${{ inputs.mise_ignore_cfg }}
        mise_log_level: ${{ inputs.mise_log_level }}
        # renovate: datasource=github-releases depName=jdx/mise
        mise_version: "v2025.10.19"
        token: ${{ secrets.GITHUB_TOKEN }}
        mise_toml: |
          [tools]
          terraform = "${{ env.TERRAFORM_VERSION }}"
          tflint    = "${{ env.TFLINT_VERSION }}"

    - name: terraform-init
      working-directory: ./current/${{ matrix.dir }}
      run: terraform init -backend=false

    - name: terraform-validate
      working-directory: ./current/${{ matrix.dir }}
      # yamllint disable-line rule:indentation
      run: |
        if [[ -f .ci.env ]]; then
          set -o allexport
          source .ci.env
          set +o allexport
        fi
        terraform validate

  terraform-lint:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        dir: ${{ fromJSON(inputs.tf_dirs) }}
      fail-fast: false
    timeout-minutes: 5
    steps:
    - name: Setup repository and tools
      uses: ppat/homelab-ops-actions/actions/setup-repository-tools@35903fc15a8d39b5c6d5eb51350324a227a5a814 # v1.0.1
      with:
        current_git_ref: ${{ inputs.git_ref }}
        current_repository: ${{ github.repository }}
        mise_ignore_cfg: ${{ inputs.mise_ignore_cfg }}
        mise_log_level: ${{ inputs.mise_log_level }}
        # renovate: datasource=github-releases depName=jdx/mise
        mise_version: "v2025.10.19"
        token: ${{ secrets.GITHUB_TOKEN }}
        mise_toml: |
          [tools]
          terraform = "${{ env.TERRAFORM_VERSION }}"
          tflint    = "${{ env.TFLINT_VERSION }}"

    - name: tflint
      working-directory: ./current/${{ matrix.dir }}
      # yamllint disable-line rule:indentation
      run: |
        if [[ -f .ci.env ]]; then
          set -o allexport
          source .ci.env
          set +o allexport
        fi
        tflint --config=${{ github.workspace }}/current/.tflint.hcl --color
