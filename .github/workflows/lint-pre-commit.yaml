---
# yamllint disable rule:line-length
name: pre-commit

on:
  workflow_call:
    inputs:
      git_ref:
        required: true
        type: string

jobs:
  pre-commit:
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        fetch-depth: 0
        repository: ${{ github.repository }}
        ref: ${{ inputs.git_ref }}

    - name: Set up python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
      with:
        python-version: '3.12'

    - name: Cache mise
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
      with:
        path: ~/.local/share/mise
        key: mise-${{runner.os}}-${{runner.arch}}-${{hashFiles('mise.toml')}}
        restore-keys: |
          mise-${{runner.os}}-${{runner.arch}}-

    - name: Cache pre-commit hooks
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4
      with:
        path: ~/.cache/pre-commit/
        key: pre-commit-${{runner.os}}-${{runner.arch}}-${{env.pythonLocation}}-${{hashFiles('.pre-commit-config.yaml')}}
        restore-keys: |
          pre-commit--${{runner.os}}-${{runner.arch}}-

    - name: Setup mise
      env:
        # renovate: datasource=github-releases depName=jdx/mise
        MISE_VERSION: "v2025.1.0"
      run: |
        curl https://mise.run | sh
        eval "$($HOME/.local/bin/mise activate bash)"
        $HOME/.local/bin/mise upgrade --yes
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        echo "$HOME/.local/share/mise/bin" >> $GITHUB_PATH
        echo "$HOME/.local/share/mise/shims" >> $GITHUB_PATH

    - name: Install pre-commit hooks
      run: pre-commit install --install-hooks --hook-type pre-commit

    - name: check-added-large-files
      if: success() || failure()
      run: pre-commit run --all-files --color=always check-added-large-files

    - name: check-executables-have-shebangs
      if: success() || failure()
      run: pre-commit run --all-files --color=always check-executables-have-shebangs

    - name: check-json
      if: success() || failure()
      run: pre-commit run --all-files --color=always check-json

    - name: detect-private-key
      if: success() || failure()
      run: pre-commit run --all-files --color=always detect-private-key

    - name: end-of-file-fixer
      if: success() || failure()
      run: pre-commit run --all-files --color=always end-of-file-fixer

    - name: forbid-new-submodules
      if: success() || failure()
      run: pre-commit run --all-files --color=always forbid-new-submodules

    - name: mixed-line-ending
      if: success() || failure()
      run: pre-commit run --all-files --color=always mixed-line-ending

    - name: trailing-whitespace
      if: success() || failure()
      run: pre-commit run --all-files --color=always trailing-whitespace
